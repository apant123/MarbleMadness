# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def isSameTree(self, p: Optional[TreeNode], q: Optional[TreeNode]) -> bool:
        # poutput = []
        # qoutput = []
        # def dfs(root, arr):
        #     if root is None:
        #         arr.append("a")
        #         return
        #     arr.append(root.val)
        #     valueleft = dfs(root.left,arr)
        #     valueright = dfs(root.right,arr)
        #     return arr

        # poutput = dfs(p,poutput)
        # qoutput = dfs(q,qoutput)
        # return poutput == qoutput
        if p is None and q is None:
            return True
        if (not p or not q) or p.val != q.val:
            return False
        return self.isSameTree(p.left,q.left) and self.isSameTree(p.right,q.right)

        

